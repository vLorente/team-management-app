"""More specific typing for id

Revision ID: f1ca4046f930
Revises: 7088981bf0ad
Create Date: 2023-10-06 22:54:00.156068

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f1ca4046f930'
down_revision: Union[str, None] = '7088981bf0ad'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Convierte la columna "id" de VARCHAR a UUID usando la cláusula USING
    op.execute("ALTER TABLE teams ALTER COLUMN id TYPE UUID USING id::uuid")

    op.alter_column('teams', 'id',
               existing_type=sa.VARCHAR(length=16),
               type_=sa.UUID(),
               existing_nullable=False)
    op.create_unique_constraint(op.f('uq_teams_id'), 'teams', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # En la migración de reversión, puedes volver al tipo de columna anterior si es necesario
    op.execute("ALTER TABLE teams ALTER COLUMN id TYPE VARCHAR")
    
    op.drop_constraint(op.f('uq_teams_id'), 'teams', type_='unique')
    op.alter_column('teams', 'id',
               existing_type=sa.UUID(),
               type_=sa.VARCHAR(length=16),
               existing_nullable=False)
    # ### end Alembic commands ###
