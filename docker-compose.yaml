services:
  fastapi:
    build: 
      context: ./backend
      dockerfile: backend.dockerfile
      args:
        - INSTALL_DEV=${INSTALL_DEV-false}
    container_name: fastapi-service
    env_file: ".env"
    environment:
      - DATABASE_URL=postgresql+asyncpg://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_SERVER}:${POSTGRES_PORT}/${POSTGRES_DB}
    ports:
      - '8000:8000'
    depends_on:
      - postgres

  postgres:
    image: postgres:15-alpine
    restart: always
    container_name: postgres-service
    env_file: ".env"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    expose:
      - ${POSTGRES_PORT}
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/

  frontend:
    build:
      context: ./frontend
      dockerfile: frontend.dockerfile
      args:
        - FRONTEND_ENV=${FRONTEND_ENV-production}
    container_name: nextjs-service
    env_file: ".env"
    ports:
      - '3000:3000'

volumes:
  postgres_data:
